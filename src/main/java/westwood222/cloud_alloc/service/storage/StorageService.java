package westwood222.cloud_alloc.service.storage;

import westwood222.cloud_alloc.dto.storage.delete.StorageDeleteRequest;
import westwood222.cloud_alloc.dto.storage.delete.StorageDeleteResponse;
import westwood222.cloud_alloc.dto.storage.read.StorageReadRequest;
import westwood222.cloud_alloc.dto.storage.read.StorageReadResponse;
import westwood222.cloud_alloc.dto.storage.upload.StorageUploadRequest;
import westwood222.cloud_alloc.dto.storage.upload.StorageUploadResponse;
import westwood222.cloud_alloc.exception.external.ExternalException;

public interface StorageService {
    /**
     * Upload a file to a cloud storage
     *
     * @param request contains Multipart of the file, and additional fields needed for uploading
     * @return foreignId of the uploaded file, as well as additional info needed by the caller.
     * @throws ExternalException when something went wrong during uploading
     */
    StorageUploadResponse upload(StorageUploadRequest request);

    /**
     * Read/get a file from a cloud storage
     *
     * @param request foreignId of the target file, and additional fields needed for uploading
     * @return link (generated by the cloud storage provider) to view the file (and possibly download it).
     * @throws ExternalException when something went wrong during reading the file
     */
    StorageReadResponse read(StorageReadRequest request);

    /**
     * Delete a file from a cloud storage
     *
     * @param request foreignId of the target file, and whether the delete operation is hard or soft.
     * @return the date and time that the file will be permanently deleted; null if hard delete.
     * @throws ExternalException when something went wrong during reading the file
     */
    StorageDeleteResponse delete(StorageDeleteRequest request);
}
